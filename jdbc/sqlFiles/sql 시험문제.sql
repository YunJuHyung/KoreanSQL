CREATE TABLE bookmember(
MEM_IDX NUMBER(5,0) NOT NULL primary KEY,
NAME VARCHAR(20) NOT NULL,
EMAIL VARCHAR(20) NOT NULL UNIQUE,
TEL VARCHAR(20),
PASSWORD VARCHAR(10)
);

SELECT * FROM BOOKMEMBER ;

INSERT INTO BOOKMEMBER VALUES(10001,'이하니','honey@naver.com','010-9889-0567','1122'); 
INSERT INTO BOOKMEMBER VALUES(10002,'이세종','jong@daum.net','010-2354-6773','2345'); 
INSERT INTO BOOKMEMBER VALUES(10003,'최행운','lucky@korea.com','010-5467-8792','9876'); 
INSERT INTO BOOKMEMBER VALUES(10004,'나길동','nadong@kkk.net','010-3456-8765','3456'); 
INSERT INTO BOOKMEMBER VALUES(10005,'강감찬','haha@korea.net','010-3987-9087','1234');


CREATE TABLE books (
  BCODE CHAR(5) NOT NULL PRIMARY KEY,
  TITLE VARCHAR2(30) NOT NULL,
  WRITER VARCHAR2(20) NOT NULL,
  PUBLISHER VARCHAR2(20),
  PDATE DATE
);

SELECT * FROM BOOKS ;

INSERT INTO books VALUES('A1101','코스모스','칼세이건','사이언스북스',TIMESTAMP'2006-12-01 00:00:00.0');
INSERT INTO books VALUES('B1101','해커스토익','이해커','해커스랩',TIMESTAMP'2018-07-10 00:00:00.0');
INSERT INTO books VALUES('C1101','푸른사자 와니니','이현','창비',TIMESTAMP'2015-06-20 00:00:00.0');
INSERT INTO books VALUES('A1102','페스트','알베르트 까뮈','민음사',TIMESTAMP'2011-03-01 00:00:00.0');

CREATE TABLE bookrent (
	RENT_NO NUMBER(5,0) NOT NULL PRIMARY KEY,
	MEM_IDX NUMBER(5,0) NOT NULL,
	BCODE CHAR(5) NOT NULL,
	RENT_DATE DATE NOT NULL,
	EXP_DATE DATE NOT NULL,
	RETURN_IDX DATE,
	DELAY_DAYS NUMBER(3,0),
	FOREIGN KEY(MEM_IDX)
	REFERENCES bookmember(MEM_IDX),
	FOREIGN KEY(BCODE)
	REFERENCES books(BCODE)
);

DROP TABLE BOOKRENT ;
SELECT * FROM BOOKRENT ;

INSERT INTO BOOKRENT VALUES(1,10001,'B1101',TIMESTAMP'2023-05-01 14:22:00.0','2023-05-15',TIMESTAMP'2023-05-14 11:30:00.0',-1);
INSERT INTO BOOKRENT VALUES(2,10002,'C1101',TIMESTAMP'2023-06-12 17:04:00.0','2023-06-25',NULL,null);
INSERT INTO BOOKRENT VALUES(3,10003,'B1101',TIMESTAMP'2023-06-03 10:15:00.0','2023-06-17',TIMESTAMP'2023-06-17 11:33:00.0',0);
INSERT INTO BOOKRENT VALUES(4,10004,'C1101',TIMESTAMP'2023-04-03 13:34:00.0','2023-04-17',TIMESTAMP'2023-04-15 14:20:00.0',-2);
INSERT INTO BOOKRENT VALUES(5,10001,'A1101',TIMESTAMP'2023-06-16 11:11:00.0','2023-06-30',NULL,null);
INSERT INTO BOOKRENT VALUES(6,10003,'A1102',TIMESTAMP'2023-06-17 11:41:00.0','2023-07-01',NULL,null);
INSERT INTO BOOKRENT VALUES(7,10002,'A1101',TIMESTAMP'2023-05-15 13:42:00.0','2023-05-29',TIMESTAMP'2023-05-30 12:42:00.0',1);

UPDATE BOOKRENT SET DELAY_DAYS = RETURN_DATE - EXP_DATE;
SELECT * FROM BOOKRENT;
SELECT RETURN_DATE - EXP_DATE FROM BOOKRENT;

--//중요 1. tbl_buy 테이블에서 사용자ID 별로 구매 횟수를 구해서 가장 구매횟수가 많은 사용자ID, 구매횟수(buy_count)를 조회하여라
--단 , 구매횟수가 가장 많은 것은 1개이다.
SELECT customid,count(*) buy_count
	FROM TBL_BUY tb 
	GROUP BY CUSTOMID 
	ORDER BY buy_count DESC 

--------------------------------------------
SELECT rownum,customid,buy_count
FROM (
	SELECT customid, count(*) buy_count
	FROM TBL_BUY tb 
	GROUP BY CUSTOMID 
	ORDER BY buy_count DESC 
	);
--WHERE rownum =1; 	--rownum에 쓸수 있는 연산은 >=, <=, >, <, BETWEEN, rownum=1(1이외의 다른 값은 동작오류)

--오라클은 조회된 행에 순서대로 번호를 부여하여 rownum 컬럼에 저장한다. 항상 사용할 수 있는 컬럼입니다.
SELECT rownum, buy_seq, customid,quantity FROM TBL_BUY tb 
ORDER BY QUANTITY DESC;
